<%= form_for lead, :html => {'autocomplete' => 'off'} do |f| %>
<input type="text" style="display:none">
<input type="password" style="display:none">

  <% if lead.errors.any? %>
    <div id="error_explanation" class="card-panel red white-text">
      <h5><%= t('errors.template.header')  %>:</h5>

      <ul>
      <% lead.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>
  <div class="section">
    <div class="card">
      <div class="card-content">
        <div class="row">
          <div class="input-field col s12 m3 l3">
            <%= f.text_field :phone, 
                autocomplete: 'nope',
                required: true,
                class: 'autocomplete autocomplete-phone phone',
                onkeyup: "search_by_phone($(this).val())",
                onkeydown: "select_first_phone(event, this)" %>
            <%= f.label  :phone, id: 'lead_phone_label' %>
          </div>

          <div class="input-field col s12 m4 l4">
            <%= f.text_field :customer, 
                autocomplete: 'nope',
                required: true,
                class: 'autocomplete autocomplete-customer',
                id: 'lead_customer' ,
                onkeyup: "search_by_name($(this).val())" %>
            <%= f.hidden_field :customer_id %>
            <%= f.label  :customer_id, id: 'lead_customer_label' %>
          </div>
          <div class="input-field col s12 m3 l3">
            <%= f.text_field :email,
                autocomplete: 'nope',
                required: true,
                class: 'autocomplete autocomplete-email',
                onkeyup: "search_by_email($(this).val())" %>
            <%= label_tag :email , "Email", id: 'lead_email_label' %>
          </div>
          <div class="col s12 m2 l2 display-flex pt-2 pl-4 justify-content-end">
            <!-- Mo dal Trigger -->
            <a class="btn btn-floating waves-effect indigo waves-light left tooltipped" data-position="left" data-tooltip="New customer" onclick="open_customer_modal();"><i class="material-icons">person_add</i></a>
          </div>
        </div>
        <div class="row other-fields" style="display: none;">									
          <div class="input-field col s12 m8">
            <%= f.text_field :description, autocomplete: 'off' %>
            <%= f.label  :description %>
          </div>
          <div class="input-field col s6 m4">
            <%= f.text_field :via, autocomplete: 'off', required: true, class: 'autocomplete autocomplete-via' %>
            <%= f.label :via, "Source" %>
          </div>
          <div class="input-field col s6 m4">
            <%= f.datetime_field :date %>
            <%= f.label  :date, class: 'active' %>
          </div>
          <div class="col s12 m4">
            <div class="input-field">

              <%= f.select :status, options_for_select(Lead.status.options, lead.status) %>
              <%= f.label  :status %>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="save-buttons col s12 pb-2" style='display: none;'>
    <% if lead.new_record? %>
      <%= f.button :submit, :value => "save_n_estimate", class:"btn indigo waves-effect waves-light breadcrumbs-btn right ml-1" do %>
        <i class="material-icons hide-on-med-and-up">arrow_forward</i><span class="hide-on-small-only"><%= t('actions.leads.save_n_estimate') %></span>
      <% end %>
    <% end %>
    <%= f.button :submit, :value => "save", class:"btn waves-effect waves-light breadcrumbs-btn right" do %>
      <i class="material-icons hide-on-med-and-up">save</i><span class="hide-on-small-only"><%= t('actions.leads.save_lead') %></span>
    <% end %>
    <%# <a class="btn indigo waves-effect waves-light breadcrumbs-btn right ml-1" href="estimate-add.html"><i class="material-icons hide-on-med-and-up">arrow_forward</i><span class="hide-on-small-only">Save & Estimate</span></a> %>
    <%# <a class="btn waves-effect waves-light breadcrumbs-btn right" href="lead-add.html"><i class="material-icons hide-on-med-and-up">save</i><span class="hide-on-small-only">Save lead</span></a> %>
  </div>
<% end %>


			<%= render 'customer_form', customer: @customer %>
</div>
<%= javascript_tag do %>
  var edit = <%= raw(@edit) %>
<% end %>
<% content_for :scripts do %>
  <script>
    const insert_value_to_field = (field_id, value) => {
      $(`#${field_id}`).val(value)
      $(`#${field_id}_label`).addClass("active")
    }

    const headers = new Headers({
      "Content-Type": "application/json",
      "Accept": "application/json"
    })
    const fetchConfig = {
      headers
    }
    let firstPhone = '';
    document.getElementById('new_customer').addEventListener('submit', () => {

      const customer_name = document.getElementById('new_name_field').value;
      const customer_email = document.getElementById('new_email_field').value;
      const customer_phone = document.getElementById('new_phone_field').value;

      const lead_customer = document.getElementById('lead_customer');
      const lead_phone = document.getElementById('lead_phone');
      const lead_email = document.getElementById('lead_email');

      const lead_customer_id = document.getElementById('lead_customer_id');

      lead_customer.value = customer_name
      lead_phone.value = customer_phone
      lead_email.value = customer_email
      document.getElementById('lead_customer_label').classList.add('active');

      setTimeout(() => {
        search_by_name(customer_name, true)
      }, 300)
      $("#customer-add-modal").modal('close');
      $(".other-fields, .save-buttons").fadeIn()
    });

    select_first_phone = (event, input) => {
      const code = (event.keyCode ? event.keyCode : e.which)

      if (code == 13) {
        event.preventDefault();
        search_by_phone(firstPhone, true)
        //insert_value_to_field('lead_phone', firstPhone)
        lead_phone.blur()
      }
    }

    search_by_name = (value, completed = false) => {
      fetch(`/customers?q%5Bname_cont%5D=${value}`, fetchConfig)
      .then((res) => res.json())
      .then((result) => {
        if(completed){
          $("#lead_customer_id").val(result[0].id);
          insert_value_to_field('lead_email', result[0].main_email);
          insert_value_to_field('lead_phone', result[0].main_phone);
          $(".other-fields, .save-buttons").fadeIn();
        }
        // console.log(data)
        if(Array.isArray(result) && result.length > 0){
          let customerList = {}
          result.map((element, index) => {
            customerList[element.name] = null
          })
          var customer_autocomplete = document.getElementById("lead_customer");
          var customer_instance = M.Autocomplete.getInstance(customer_autocomplete);
          customer_instance.updateData(customerList)
        }
      })

    };

    search_by_phone = (value, completed = false) => {
      //console.log(value)
      firstPhone = ''
      value &&
      fetch(`/customers/search_by_phone/${value}`, fetchConfig)
      .then((res) => res.json())
      .then((result) => {
        if(completed){
          $("#lead_customer_id").val(result[0].id);
          insert_value_to_field('lead_customer', result[0].name);
          insert_value_to_field('lead_email', result[0].main_email);
          insert_value_to_field('lead_phone', result[0].main_phone);
          $(".other-fields, .save-buttons").fadeIn()
          resultCheck = result.length
        }
        else if(Array.isArray(result) && result.length > 0){
          let phoneList = {}
          result.map((element, index) => {
            // phoneList[element.contacts.data.phone] = null
            element.contacts.map((contact) => phoneList[contact.data.phone] = null)
          })
          var phone_autocomplete = document.getElementById("lead_phone");
          var phone_instance = M.Autocomplete.getInstance(phone_autocomplete);
          phone_instance.updateData(phoneList)
          firstPhone = result[0].main_phone
        }
      })
      .catch((error) => {
        
      })
      if(!value && completed){
        triggerModal()
      }      
    };

    triggerModal = () => {
      $("#customer-add-modal").modal('open');
      $("#new_phone_field").val(document.getElementById('lead_phone').value)
      document.getElementById('new_phone').classList.add('active')
    }

    search_by_email = (value, completed = false) => {
      value &&
      fetch(`/customers/search_by_email/${value}`, fetchConfig)
      .then((res) => res.json())
      .then((result) => {
        if(completed){
          $("#lead_customer_id").val(result[0].id)
          insert_value_to_field('lead_customer', result[0].name)
          result[0].contacts[0] && insert_value_to_field('lead_phone', result[0].contacts[0].data.phone)
          $(".other-fields, .save-buttons").fadeIn()
        }
        if(Array.isArray(result) && result.length > 0){
          let emailList = {}
          result.map((element, index) => {
            // emailList[element.contacts.data.phone] = null
            element.contacts.map((contact) => emailList[contact.data.email] = null)
          })
          var email_autocomplete = document.getElementById("lead_email");
          var email_instance = M.Autocomplete.getInstance(email_autocomplete);
          email_instance.updateData(emailList)
        }
      })
      .catch((error) => console.log(error))      
    }
  </script>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      if(window.edit) {
        $(".other-fields, .save-buttons").fadeIn();
      }
      document.getElementById('lead_customer').addEventListener('change', (e) => {
        document.getElementById('new_name_field').setAttribute('value', e.target.value);
        document.getElementById('customer_name_label').classList.add('active');
        document.getElementById('lead_email_label').classList.add('active');
      });

      const lead_phone = document.getElementById('lead_phone');
      const phone_options = {
        data: {},
        limit: 3,
        minLength: 2,
        onAutocomplete: (res) => search_by_phone(res, true)
      };
      M.Autocomplete.init(lead_phone, phone_options);

      const email_search = document.getElementById('lead_email');
      const email_options = {
        data: {},
        limit: 5,
        minLength: 2,
        onAutocomplete: (res) => search_by_email(res, true)
      };
      M.Autocomplete.init(email_search, email_options);

      const lead_customer = document.getElementById('lead_customer');
      const customer_options = {
        data: {},
        limit: 5,
        minLength: 2,
        onAutocomplete: (res) => search_by_name(res, true)
      }
      M.Autocomplete.init(lead_customer, customer_options);
    });
		$(document).ready(function(){
			$('.modal').modal({
				opacity: .8
      });
      
      var DateField = MaterialDateTimePicker.create($('#lead_date'))

			$('input.autocomplete.autocomplete-via').autocomplete({
				data: {
					"Phone": null,
					"Email (e-mail)": null,
					"Store": null
				},
			});
		});

		function open_customer_modal() {
        $('#new_name_field').val($('#lead_customer').val());
        $('#new_email_field').val($('#lead_email').val());
        $('#new_phone_field').val($('#lead_phone').val());
        $('#customer-add-modal').modal('open');
    }
	</script>
<% end %>