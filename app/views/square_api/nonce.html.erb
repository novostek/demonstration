<%= content_for :head_content do %>
  <link rel="stylesheet" type="text/css" href="/css/mysqpaymentform.css">
  <link rel="stylesheet" type="text/css" href="/css/woffice-style.css">
<% end %>

<div class="card-panel">

  <div class="row">
    <div class="col s12">
      <h4>Card Capture</h4>
      <p>Woffice works better integrated with Square. We highly recommend your to sign up if youâ€™re not already.</p>
      <div id="form-container">
        <div class="cards">
          <div class="card-front">
            <div class="card-logo"><img src="/woffice_w.svg" alt=""></div>
            <div id="sq-card-number"></div>
            <div class="third" id="sq-expiration-date"></div>
            <div class="third" id="sq-postal-code"></div>
            <div class="third" id="sq-cvv"></div>
          </div>
          <div class="card-back">

          </div>
        </div>

        <br><br>
        <a href="#" id="sq-creditcard" class="border-round  waves-effect btn-flat indigo white-text btn-nonce-payment" onclick="onGetCardNonce(event)"><i class="material-icons left">payment</i>Save Card</a>
      </div>
    </div>
  </div>

  <% if @from.present? and @from == "customer" %>
    <a href="#modal-mail-local" class="mr-2 btn-secondary modal-trigger btn waves-effect waves-light breadcrumbs-btn right"><%= t "button.send_mail" %></a>
  <% end %>
</div>

<div id="modal-mail-local" class="modal">
  <%= form_with url: mail_card_customer_path(@customer), method: :get, local: true do |f| %>
    <div class="modal-content">
      <h4>Send email</h4>
      <div class="row">

        <div class="input-field">
          <%= f.label :emails, "Emails" %>
          <%= f.text_field :emails, value: @customer.get_main_email_f, required: true %>

        </div>

        <div class="input-field">
          <%= f.label :subject %>
          <%= f.text_field :subject, required: true %>
        </div>

      </div>
    </div>
    <div class="modal-footer">
      <%= f.button :submit,  class:"modal-action modal-close waves-effect waves-green btn-flat btn-send", target:"_self" do %>
        <i class="material-icons left">send</i> Send
      <% end %>
      <!--		<a href="#!" class="modal-action modal-close waves-effect waves-green btn-flat btn-send"> <i class="material-icons left">send</i> Send</a>-->
    </div>
  <% end %>
</div>
<%= form_with url: add_card_square_api_index_path, id:"nonce_form" do |f|%>
  <%= f.hidden_field :nonce, id: "nonce" %>
  <%= f.hidden_field :customer, value: @customer.square_id %>
  <%= f.hidden_field :customer_woffice, value: @customer.id %>
  <%= f.hidden_field :from, value: @from %>
  <%= f.hidden_field :estimate, value: @estimate.id if @estimate.present? %>

<% end %>
<%= content_for :scripts do %>
  <script type="text/javascript" src="<%= Rails.configuration.woffice['js_square_url'] %>/v2/paymentform">
  </script>



  <script type="text/javascript">
      // Create and initialize a payment form object
      const paymentForm = new SqPaymentForm({
          // Initialize the payment form elements

          //TODO: Replace with your sandbox application ID
          applicationId: "<%= SquareApi.get_app_id %>",
          inputClass: 'sq-input',
          autoBuild: false,
          // Customize the CSS for SqPaymentForm iframe elements
          inputStyles: [{
              fontSize: '16px',
              lineHeight: '24px',
              padding: '16px',
              placeholderColor: '#a0a0a0',
              backgroundColor: 'transparent',
          }],
          // Initialize the credit card placeholders
          cardNumber: {
              elementId: 'sq-card-number',
              placeholder: 'Card Number'
          },
          cvv: {
              elementId: 'sq-cvv',
              placeholder: 'CVV'
          },
          expirationDate: {
              elementId: 'sq-expiration-date',
              placeholder: 'MM/YY'
          },
          postalCode: {
              elementId: 'sq-postal-code',
              placeholder: 'Zip Code'
          },
          // SqPaymentForm callback functions
          callbacks: {
              /*
              * callback function: cardNonceResponseReceived
              * Triggered when: SqPaymentForm completes a card nonce request
              */
              cardNonceResponseReceived: function (errors, nonce, cardData) {
                  if (errors) {
                      // Log errors from nonce generation to the browser developer console.
                      console.error('Encountered errors:');
                      errors.forEach(function (error) {
                          console.error('  ' + error.message);
                      });
                      alert('Encountered errors, check browser developer console for more details');
                      return;
                  }

                  $("#nonce").val(nonce);
                  $("#nonce_form").submit();
                  //TODO: Replace alert with code in step 2.1
                  // fetch('/customers/process_payment', {
                  //     method: 'POST',
                  //     headers: {
                  //         'Accept': 'application/json',
                  //         'Content-Type': 'application/json'
                  //     },
                  //     body: JSON.stringify({
                  //         nonce: nonce
                  //     })
                  // })
                  //     .catch(err => {
                  //         alert('Network error: ' + err);
                  //     })
                  //     .then(response => {
                  //         if (!response.ok) {
                  //             return response.text().then(errorInfo => Promise.reject(errorInfo));
                  //         }
                  //         return response.text();
                  //     })
                  //     .then(data => {
                  //         console.log(JSON.stringify(data));
                  //         alert('Payment complete successfully!\nCheck browser developer console for more details');
                  //     })
                  //     .catch(err => {
                  //         console.error(err);
                  //         alert('Payment failed to complete!\nCheck browser developer console for more details');
                  //     });
              }
          }
      });
      //TODO: paste code from step 1.1.5
      paymentForm.build();
      // onGetCardNonce is triggered when the "Pay $1.00" button is clicked
      function onGetCardNonce(event) {
          // Don't submit the form until SqPaymentForm returns with a nonce
          event.preventDefault();
          // Request a nonce from the SqPaymentForm object
          paymentForm.requestCardNonce();
      }
  </script>
<% end %>